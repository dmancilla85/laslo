/*
 * Copyright (C) 2018 David
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package com.laslo.gui;

import com.laslo.core.LoopCatcher;
import com.tools.io.GenBankID;
import com.tools.io.InputSequence;
import static com.tools.io.InputSequence.BIOMART;
import static com.tools.io.InputSequence.ENSEMBL;
import static com.tools.io.InputSequence.FLYBASE;
import static com.tools.io.InputSequence.GENERIC;
import static java.awt.EventQueue.invokeLater;
import java.awt.event.WindowEvent;
import static java.awt.event.WindowEvent.WINDOW_CLOSING;
import java.io.File;
import java.io.IOException;
import java.io.PrintStream;
import static java.lang.System.exit;
import static java.lang.System.out;
import static java.lang.System.setErr;
import static java.lang.System.setOut;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import static java.util.Arrays.asList;
import java.util.LinkedHashMap;
import java.util.Locale;
import java.util.ResourceBundle;
import static java.util.ResourceBundle.getBundle;
import java.util.logging.Level;
import static java.util.logging.Level.SEVERE;
import java.util.logging.Logger;
import static java.util.logging.Logger.getLogger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import static javax.swing.JFileChooser.APPROVE_OPTION;
import static javax.swing.JFileChooser.DIRECTORIES_ONLY;
import static javax.swing.JFileChooser.FILES_AND_DIRECTORIES;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.biojava.nbio.core.sequence.DNASequence;

/**
 *
 * @author David A. Mancilla
 */
public class GUIFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     *
     * @throws java.io.IOException
     */
    public GUIFrame() throws IOException {
        loopCatcher = new LoopCatcher();
        isRunning = false;
        this.locale = new Locale("en", "US");
        this.bundle = getBundle("resources/Bundle", locale);
        initComponents();
        this.jRBen_EN.setSelected(true);
        this.jRBes_AR.setSelected(false);
        this.jLblError.setText("");
        this.jftNumberOfRandoms.setValue(10);
        this.jftkLet.setValue(2);
        this.fromLocalPath = true;
        this.jSpinMismatch.setVisible(false);
        this.jSpinWooble.setVisible(false);
        this.jLabel2.setVisible(false);
        this.jLabel5.setVisible(false);
        this.jcbSearchInverse.setSelected(false);
        this.jcbExtended.setSelected(false);
        this.jcbMakeRandoms.setSelected(false);

        this.jTab.setSelectedIndex(0);

        TextAreaOutputStream taos = new TextAreaOutputStream(jTAConsole);
        PrintStream ps = new PrintStream(taos);
        setOut(ps);
        setErr(ps);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jcbMakeRandoms = new javax.swing.JCheckBox();
        jcbExtended = new javax.swing.JCheckBox();
        jLblNRand = new javax.swing.JLabel();
        jftNumberOfRandoms = new javax.swing.JFormattedTextField();
        jLblNKlet = new javax.swing.JLabel();
        jftkLet = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jTFPathOut = new javax.swing.JTextField();
        jButtonOut = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSpinMinLength = new javax.swing.JSpinner();
        jSpinMaxLength = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jSpinWooble = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jSpinMismatch = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jcbSearchInverse = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTALoopPatterns = new javax.swing.JTextArea();
        jftAdditionalSeq = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jBStart = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTAConsole = new javax.swing.JTextArea();
        jLblError = new javax.swing.JLabel();
        jTab = new javax.swing.JTabbedPane();
        jPanFile = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTFPathIn = new javax.swing.JTextField();
        jButtonIn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanOnline = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTAGenes = new javax.swing.JTextArea();
        jrbNcbi = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMIExit = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jRBen_EN = new javax.swing.JRadioButtonMenuItem();
        jRBes_AR = new javax.swing.JRadioButtonMenuItem();
        jMIAbout = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("LASLO v1.00");
        setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        setIconImage(new ImageIcon(getClass().getResource("/resources/noun_655767_cc.png")).getImage());
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(533, 437));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jcbMakeRandoms.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("resources/Bundle"); // NOI18N
        jcbMakeRandoms.setText(bundle.getString("RANDOMIZE_CHECK")); // NOI18N
        jcbMakeRandoms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMakeRandomsActionPerformed(evt);
            }
        });

        jcbExtended.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jcbExtended.setText(bundle.getString("EXTENDED_MODE_CHECK")); // NOI18N
        jcbExtended.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbExtendedActionPerformed(evt);
            }
        });

        jLblNRand.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLblNRand.setText(bundle.getString("RANDOM_NUMBERS")); // NOI18N
        jLblNRand.setEnabled(false);

        jftNumberOfRandoms.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftNumberOfRandoms.setEnabled(false);

        jLblNKlet.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLblNKlet.setText(bundle.getString("RANDOM_K")); // NOI18N
        jLblNKlet.setEnabled(false);

        jftkLet.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftkLet.setEnabled(false);
        jftkLet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftkLetActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel6.setText(bundle.getString("DESTINATION")); // NOI18N

        jTFPathOut.setEditable(false);
        jTFPathOut.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jTFPathOut.setToolTipText(bundle.getString("DESTINATION_TOOLTIP")); // NOI18N
        jTFPathOut.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTFPathOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFPathOutActionPerformed(evt);
            }
        });

        jButtonOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/noun_53223_cc.png"))); // NOI18N
        jButtonOut.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcbMakeRandoms, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbExtended, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
                        .addGap(6, 6, 6)
                        .addComponent(jLblNRand, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jftNumberOfRandoms, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLblNKlet, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFPathOut)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jftkLet, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonOut))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jTFPathOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonOut, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbMakeRandoms)
                    .addComponent(jLblNRand)
                    .addComponent(jftNumberOfRandoms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLblNKlet)
                    .addComponent(jftkLet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbExtended)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLblNRand.getAccessibleContext().setAccessibleName("");
        jLblNKlet.getAccessibleContext().setAccessibleName("k-let");

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel1.setText(bundle.getString("STEM_LENGTH_BETWEEN")); // NOI18N

        jSpinMinLength.setPreferredSize(new java.awt.Dimension(35, 22));
        jSpinMinLength.setValue(4);
        jSpinMinLength.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinMinLengthStateChanged(evt);
            }
        });

        jSpinMaxLength.setMinimumSize(new java.awt.Dimension(35, 30));
        jSpinMaxLength.setPreferredSize(new java.awt.Dimension(45, 22));
        jSpinMaxLength.setValue(12);
        jSpinMaxLength.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinMaxLengthStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel2.setText(bundle.getString("WOOBLE_ALLOWED_TO")); // NOI18N

        jSpinWooble.setPreferredSize(new java.awt.Dimension(35, 22));
        jSpinWooble.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinWoobleStateChanged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel5.setText(bundle.getString("MISMATCHS_ALLOWED_TO")); // NOI18N

        jSpinMismatch.setPreferredSize(new java.awt.Dimension(35, 22));
        jSpinMismatch.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinMismatchStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel3.setText(bundle.getString("ENTER_THE_LOOPS")); // NOI18N

        jcbSearchInverse.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jcbSearchInverse.setLabel("Search for inversed patterns too ");
        jcbSearchInverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSearchInverseActionPerformed(evt);
            }
        });

        jTALoopPatterns.setColumns(20);
        jTALoopPatterns.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jTALoopPatterns.setRows(3);
        jTALoopPatterns.setTabSize(2);
        jTALoopPatterns.setText("CNGG, CNGGN, CNGGNN, CNGGNNN, CNGGNNNN");
        jTALoopPatterns.setToolTipText(bundle.getString("ENTER_LOOP_TOOLTIP")); // NOI18N
        jTALoopPatterns.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setViewportView(jTALoopPatterns);

        try {
            jftAdditionalSeq.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("UUUUUUUUUUUUUUUUUUUUUU")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftAdditionalSeq.setToolTipText(bundle.getString("ADDITION_SEQ_TOOLTIP"));
        jftAdditionalSeq.setAutoscrolls(false);
        jftAdditionalSeq.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jftAdditionalSeq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftAdditionalSeqActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel9.setText(bundle.getString("ADDITIONAL_SEQ")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinMinLength, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSpinMaxLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(252, 252, 252))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinWooble, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbSearchInverse, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jSpinMismatch, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jftAdditionalSeq)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jSpinMinLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinMaxLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jSpinMismatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jSpinWooble, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcbSearchInverse, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jftAdditionalSeq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel3.getAccessibleContext().setAccessibleName("");

        jBStart.setText(bundle.getString("START")); // NOI18N
        jBStart.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBStartActionPerformed(evt);
            }
        });

        jTAConsole.setEditable(false);
        jTAConsole.setBackground(new java.awt.Color(204, 204, 204));
        jTAConsole.setColumns(20);
        jTAConsole.setFont(new java.awt.Font("Consolas", 0, 13)); // NOI18N
        jTAConsole.setLineWrap(true);
        jTAConsole.setRows(5);
        jTAConsole.setToolTipText("");
        jTAConsole.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("OUTPUT_TITLE"))); // NOI18N
        jTAConsole.setFocusable(false);
        jTAConsole.setVerifyInputWhenFocusTarget(false);
        jScrollPane2.setViewportView(jTAConsole);
        jTAConsole.getAccessibleContext().setAccessibleName(bundle.getString("MONITOR")); // NOI18N

        jLblError.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLblError.setForeground(new java.awt.Color(255, 0, 0));
        jLblError.setText(bundle.getString("ERROR")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jBStart, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBStart)
                    .addComponent(jLblError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTab.setBackground(javax.swing.UIManager.getDefaults().getColor("windowBorder"));
        jTab.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTab.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel4.setText(bundle.getString("PATH")); // NOI18N

        jTFPathIn.setEditable(false);
        jTFPathIn.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jTFPathIn.setToolTipText(bundle.getString("PATH_TOOLTIP")); // NOI18N
        jTFPathIn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTFPathIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFPathInActionPerformed(evt);
            }
        });

        jButtonIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/noun_53223_cc.png"))); // NOI18N
        jButtonIn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jLabel7.setText(bundle.getString("DESCRIPTION")); // NOI18N
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanFileLayout = new javax.swing.GroupLayout(jPanFile);
        jPanFile.setLayout(jPanFileLayout);
        jPanFileLayout.setHorizontalGroup(
            jPanFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanFileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanFileLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(22, 22, 22)
                        .addComponent(jTFPathIn, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonIn)
                        .addGap(4, 4, 4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanFileLayout.setVerticalGroup(
            jPanFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanFileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jTFPathIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonIn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jTab.addTab("Archivo", jPanFile);

        jTAGenes.setColumns(20);
        jTAGenes.setFont(new java.awt.Font("Calibri Light", 0, 12)); // NOI18N
        jTAGenes.setRows(5);
        jScrollPane3.setViewportView(jTAGenes);

        jrbNcbi.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jrbNcbi.setSelected(true);
        jrbNcbi.setText("NCBI");

        jLabel8.setText(bundle.getString("NCBI_DESC")); // NOI18N

        javax.swing.GroupLayout jPanOnlineLayout = new javax.swing.GroupLayout(jPanOnline);
        jPanOnline.setLayout(jPanOnlineLayout);
        jPanOnlineLayout.setHorizontalGroup(
            jPanOnlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanOnlineLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanOnlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanOnlineLayout.createSequentialGroup()
                        .addComponent(jrbNcbi, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanOnlineLayout.setVerticalGroup(
            jPanOnlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanOnlineLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanOnlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbNcbi)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTab.addTab("En línea", jPanOnline);

        jMenuFile.setText(bundle.getString("FILE")); // NOI18N
        jMenuFile.setToolTipText("");

        jMIExit.setText(bundle.getString("EXIT")); // NOI18N
        jMIExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMIExit);

        jMenuBar1.add(jMenuFile);

        jMenuHelp.setText(bundle.getString("HELP")); // NOI18N

        jRBen_EN.setSelected(true);
        jRBen_EN.setText("English");
        jRBen_EN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBen_ENActionPerformed(evt);
            }
        });
        jMenuHelp.add(jRBen_EN);

        jRBes_AR.setSelected(true);
        jRBes_AR.setText("Spanish");
        jRBes_AR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBes_ARActionPerformed(evt);
            }
        });
        jMenuHelp.add(jRBes_AR);

        jMIAbout.setText(bundle.getString("ABOUT")); // NOI18N
        jMIAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIAboutActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMIAbout);

        jMenuBar1.add(jMenuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTab))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTab, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTFPathInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFPathInActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFPathInActionPerformed

    private void jTFPathOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFPathOutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFPathOutActionPerformed

    private void jButtonOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOutActionPerformed
        // TODO add your handling code here:
        final JFileChooser fc = new JFileChooser();
        JFrame myFrame = new JFrame();
        File folder = null;

        // In response to a button click:
        fc.setFileSelectionMode(DIRECTORIES_ONLY);
        int returnVal = fc.showDialog(myFrame, bundle.getString("DESTINATION_FC_MSG"));

        if (APPROVE_OPTION == returnVal) {
            folder = fc.getSelectedFile();
        }

        if (folder != null) {
            this.jTFPathOut.setText(folder.getAbsolutePath());
        }
    }//GEN-LAST:event_jButtonOutActionPerformed

    private void jMIExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIExitActionPerformed
        // TODO add your handling code here:
        this.dispatchEvent(new WindowEvent(this, WINDOW_CLOSING));
    }//GEN-LAST:event_jMIExitActionPerformed

    private void jBStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBStartActionPerformed
        // TODO add your handling code here:
        // Llamar a método unificador
        this.start();
    }//GEN-LAST:event_jBStartActionPerformed

    private void jSpinMinLengthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinMinLengthStateChanged
        // TODO add your handling code here:
        if (new Integer(this.jSpinMinLength.getValue().toString()) < 3) {
            this.jSpinMinLength.setValue(3);
        }
    }//GEN-LAST:event_jSpinMinLengthStateChanged

    private void jSpinWoobleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinWoobleStateChanged
        // TODO add your handling code here:
        // TODO add your handling code here:
        int aux = new Integer(this.jSpinWooble.getValue().toString());
        int max = new Integer(this.jSpinMaxLength.getValue().toString());

        if (aux < 0) {
            this.jSpinWooble.setValue(0);
        } else if (aux > max) {
            this.jSpinWooble.setValue(max);
        }
    }//GEN-LAST:event_jSpinWoobleStateChanged

    private void jSpinMismatchStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinMismatchStateChanged
        // TODO add your handling code here:
        int aux = new Integer(this.jSpinMismatch.getValue().toString());
        int max = new Integer(this.jSpinMaxLength.getValue().toString());

        if (aux < 0) {
            this.jSpinMismatch.setValue(0);
        } else if (aux > max) {
            this.jSpinMismatch.setValue(max);
        }
    }//GEN-LAST:event_jSpinMismatchStateChanged

    private void jSpinMaxLengthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinMaxLengthStateChanged
        // TODO add your handling code here:
        int aux = new Integer(this.jSpinMaxLength.getValue().toString());
        int min = new Integer(this.jSpinMinLength.getValue().toString());

        if (aux < min) {
            this.jSpinMaxLength.setValue(min);
        }
    }//GEN-LAST:event_jSpinMaxLengthStateChanged

    private void jButtonInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInActionPerformed
        // TODO add your handling code here:
        final JFileChooser fc = new JFileChooser();
        JFrame myFrame = new JFrame();
        File file = null;
        boolean isFolder = true;
        this.listOfFiles = null;

        // In response to a button click:
        fc.setFileSelectionMode(FILES_AND_DIRECTORIES);
        int returnVal = fc.showDialog(myFrame, bundle.getString("PATH_FC_MSG"));

        if (returnVal == APPROVE_OPTION) {
            file = fc.getSelectedFile();
            isFolder = file.isDirectory();
        } else {
            return;
        }

        if (file.exists()) {
            if (isFolder) {
                this.listOfFiles = file.listFiles();
                this.jTFPathOut.setText(file.getAbsolutePath());
            } else {
                this.listOfFiles = new File[1];
                this.listOfFiles[0] = file;
                this.jTFPathOut.setText(file.getParent());
            }
            this.jTFPathIn.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_jButtonInActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if (this.isRunning) {
            MessageBox.show(bundle.getString("CANT_EXIT_WHILE_RUNNING")
                    + bundle.getString("PROCESS_IS_RUNNING"), bundle.getString("PROCESS_RUNNING_MSG_TITLE"));

        } else {
            exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jcbExtendedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbExtendedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbExtendedActionPerformed

    private void jcbMakeRandomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMakeRandomsActionPerformed
        // TODO add your handling code here:
        boolean val = jcbMakeRandoms.isSelected();
        this.jLblNRand.setEnabled(val);
        this.jftNumberOfRandoms.setEnabled(val);
        this.jLblNKlet.setEnabled(val);
        this.jftkLet.setEnabled(val);
    }//GEN-LAST:event_jcbMakeRandomsActionPerformed

    private void jRBes_ARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBes_ARActionPerformed
        // TODO add your handling code here:
        this.jRBen_EN.setSelected(false);
        this.locale = new Locale("es", "AR");
    }//GEN-LAST:event_jRBes_ARActionPerformed

    private void jRBen_ENActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBen_USActionPerformed
        // TODO add your handling code here:
        jRBes_AR.setSelected(false);

        this.locale = new Locale("en", "US");
    }//GEN-LAST:event_jRBen_USActionPerformed

    private void jcbSearchInverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSearchInverseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbSearchInverseActionPerformed

    private void jftkLetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftkLetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftkLetActionPerformed

    private void jftAdditionalSeqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftAdditionalSeqActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftAdditionalSeqActionPerformed

    private void jMIAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIAboutActionPerformed
        // TODO add your handling code here:
        AboutFrame af = new AboutFrame();

        af.setVisible(true);
    }//GEN-LAST:event_jMIAboutActionPerformed

    private void jTabStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        try {
            // Set cross-platform Java L&F (also called "Metal")
            UIManager.setLookAndFeel(
                    UIManager.getCrossPlatformLookAndFeelClassName());
        } catch (ClassNotFoundException | IllegalAccessException
                | InstantiationException | UnsupportedLookAndFeelException ex) {
        }
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        invokeLater(() -> {
            try {
                new GUIFrame().setVisible(true);
            } catch (IOException ex) {
                getLogger(GUIFrame.class.getName()).log(SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBStart;
    private javax.swing.JButton jButtonIn;
    private javax.swing.JButton jButtonOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLblError;
    private javax.swing.JLabel jLblNKlet;
    private javax.swing.JLabel jLblNRand;
    private javax.swing.JMenuItem jMIAbout;
    private javax.swing.JMenuItem jMIExit;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JPanel jPanFile;
    private javax.swing.JPanel jPanOnline;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JRadioButtonMenuItem jRBen_EN;
    private javax.swing.JRadioButtonMenuItem jRBes_AR;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinMaxLength;
    private javax.swing.JSpinner jSpinMinLength;
    private javax.swing.JSpinner jSpinMismatch;
    private javax.swing.JSpinner jSpinWooble;
    private javax.swing.JTextArea jTAConsole;
    private javax.swing.JTextArea jTAGenes;
    private javax.swing.JTextArea jTALoopPatterns;
    private javax.swing.JTextField jTFPathIn;
    private javax.swing.JTextField jTFPathOut;
    private javax.swing.JTabbedPane jTab;
    private javax.swing.JCheckBox jcbExtended;
    private javax.swing.JCheckBox jcbMakeRandoms;
    private javax.swing.JCheckBox jcbSearchInverse;
    private javax.swing.JFormattedTextField jftAdditionalSeq;
    private javax.swing.JFormattedTextField jftNumberOfRandoms;
    private javax.swing.JFormattedTextField jftkLet;
    private javax.swing.JRadioButton jrbNcbi;
    // End of variables declaration//GEN-END:variables

    protected Locale locale;
    private final ResourceBundle bundle;
    protected LoopCatcher loopCatcher;
    protected File[] listOfFiles;
    protected boolean isRunning;
    protected boolean fromLocalPath;

    /**
     *
     * @param value
     */
    public void setInputSequence(String value) {
        InputSequence origin;
        String fs = "";
        String cols = "0";

        switch (value) {
            case "Ensembl":
                origin = ENSEMBL;
                fs = ";";
                cols = "10";
                break;
            case "FlyBase":
                origin = FLYBASE;
                fs = ",";
                cols = "8";
                break;
            case "BioMart":
                origin = BIOMART;
                fs = "|";
                cols = "6";
                break;
            default:
                origin = GENERIC;
            //fs = this.jFTfieldSep.getText();
            //cols = this.jFTnumCols.getText();            //fs = this.jFTfieldSep.getText();
            //cols = this.jFTnumCols.getText();
        }

        /*if(fs.length() != 0){
            this.jFTfieldSep.setValue(fs);
            this.jFTnumCols.setValue(cols);
        }*/
        this.loopCatcher.setInputType(origin);
    }

    /**
     *
     * @param value
     */
    public void setIsRunning(boolean value) {
        this.isRunning = value;
        this.jBStart.setEnabled(!value);

        if (value) {
            out.println(bundle.getString("STARTING_PROCESS"));
            this.jBStart.setText(bundle.getString("WAIT"));
        } else {
            this.jBStart.setText(bundle.getString("START"));
        }
    }

    /**
     *
     * @param min
     * @param max
     * @param wooble
     * @param mismatch
     * @param pathIn
     * @param pathOut
     * @param loopList
     * @param geneList
     * @param randoms
     * @param klet
     * @return
     */
    public boolean validateParameters(int min, int max, int wooble,
            int mismatch, String pathIn, String pathOut,
            ArrayList<String> loopList, ArrayList<String> geneList,
            int randoms, int klet) {
        boolean isValid;
        isValid = true;
        String aux;

        // Validate numbers
        if (min > max || wooble > max || mismatch > max
                || min < 3 || wooble < 0 || mismatch < 0) {
            this.jLblError.setText(bundle.getString("ERROR_PARAM"));
            isValid = false;
        }

        if (jTab.getSelectedIndex() == 1) {
            if (!netIsAvailable()) {
                isValid = false;
                this.jLblError.setText(bundle.getString("NO_NET_CONNECTION"));
                return isValid;
            }

            geneList.addAll(asList(this.jTAGenes.getText().split(",")));

            for (int i = 0; i < geneList.size() && isValid; i++) {
                aux = geneList.get(i);
                aux = aux.trim();
                if (aux.length() <= 0) {
                    isValid = false;
                    this.jLblError.setText(bundle.getString("ERROR_CHECK_GENES"));
                    return isValid;
                }
            }

        } else {
            if (!new File(pathIn).exists()) {
                this.jLblError.setText(bundle.getString("ERROR_SOURCE"));
                isValid = false;
            }
        }

        // Validate destiny
        if (!new File(pathOut).exists()) {
            this.jLblError.setText(bundle.getString("ERROR_DEST_FOLDER"));
            isValid = false;
        }

        if (loopList.size() <= 0 || loopList.get(0).trim().length() == 0) {
            this.jLblError.setText(bundle.getString("ERROR_LOOPS"));
            isValid = false;
        }

        for (int i = 0; i < loopList.size() && isValid; i++) {
            aux = loopList.get(i);
            aux = aux.trim();
            if (aux.length() <= 0) {
                isValid = false;
                this.jLblError.setText(bundle.getString("ERROR_CHECK_LOOPS"));
            }
        }

        if (this.jcbMakeRandoms.isSelected()) {
            if (randoms <= 0) {
                this.jLblError.setText(bundle.getString("ERROR_INVALID_NBR_RANDOMS"));
                isValid = false;
            }
        }

        if (this.jcbMakeRandoms.isSelected()) {
            if (klet <= 0 || klet > 10) {
                this.jLblError.setText(bundle.getString("ERROR_INVALID_NBR_RANDOMS"));
                isValid = false;
            }
        }

        return isValid;
    }

    /**
     *
     * @return
     */
    private static boolean netIsAvailable() {
        try {
            final URL url = new URL("http://www.google.com");
            final URLConnection conn = url.openConnection();
            conn.connect();
            conn.getInputStream().close();
            return true;
        } catch (MalformedURLException e) {
            throw new RuntimeException(e);
        } catch (IOException e) {
            return false;
        }
    }

    /**
     *
     */
    public void start() {

        int max, min, wooble, mismatch, randoms, klet;
        String pathOut = this.jTFPathOut.getText();
        String pathIn = this.jTFPathIn.getText();
        String[] loops = this.jTALoopPatterns.getText().split(",");
        ArrayList<String> loopList, geneList;
        loopList = new ArrayList<>();
        geneList = new ArrayList<>();
        LinkedHashMap<String, DNASequence> dnaFile = null;

        if (!this.jTAGenes.getText().isEmpty()) {
            geneList.clear();
            geneList.addAll(asList(this.jTAGenes.getText().split(",")));
        }

        this.jLblError.setText("");

        if (this.isRunning) {
            return;
        }

        // Values
        min = new Integer(this.jSpinMinLength.getValue().toString());
        max = new Integer(this.jSpinMaxLength.getValue().toString());
        wooble = new Integer(this.jSpinWooble.getValue().toString());
        mismatch = new Integer(this.jSpinMismatch.getValue().toString());
        randoms = new Integer(this.jftNumberOfRandoms.getValue().toString());
        klet = new Integer(this.jftkLet.getValue().toString());

        // Loops
        loopList.addAll(asList(loops));

        // Validar parámetros
        if (!validateParameters(min, max, wooble, mismatch, pathIn, pathOut,
                loopList, geneList, randoms, klet)) {
            return;
        }

        if (jTab.getSelectedIndex() == 1) {
            try {
                dnaFile = GenBankID.downLoadSequenceForId(jTAGenes.getText()
                        .replaceAll(" ", ""));
            } catch (Exception ex) {
                Logger.getLogger(GUIFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            pathIn = GenBankID.makeFile(pathOut, dnaFile);
            this.listOfFiles = new File[1];
            this.listOfFiles[0] = new File(pathIn);
            
        }

        this.jTAConsole.setText("");
        this.setIsRunning(true);

        // Start process
        out.flush();
        loopCatcher.setBundle(bundle);
        loopCatcher.setLoopPatterns(loopList);
        loopCatcher.setAdditionalSequence(this.jftAdditionalSeq.getText().trim());
        loopCatcher.setMaxLength(max);
        loopCatcher.setMinLength(min);
        loopCatcher.setMaxMismatch(mismatch);
        loopCatcher.setMaxWooble(wooble);

        loopCatcher.setPathOut(pathOut);
        loopCatcher.setPathIn(pathIn);
        loopCatcher.setFileList(this.listOfFiles);

        loopCatcher.setIsExtendedMode(this.jcbExtended.isSelected());
        loopCatcher.setMakeRandoms(this.jcbMakeRandoms.isSelected());
        loopCatcher.setNumberOfRandoms(randoms);
        loopCatcher.setkLetRandoms(klet);
        loopCatcher.setSearchReverse(this.jcbSearchInverse.isSelected());

        GUISwingWorker worker = new GUISwingWorker(this.jTAConsole,
                this.jBStart, this.loopCatcher);
        worker.execute();
        out.println();
        setIsRunning(false);
    }
}
